#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–∞ GitHub
 * –ó–∞–ø—É—Å–∫: node check-security.js
 */

const fs = require('fs');
const path = require('path');

console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è GitHub...\n');

let hasIssues = false;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const sensitiveFiles = [
  '.env',
  'google-service-account-key.json',
  '*-service-account-key.json'
];

console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');

sensitiveFiles.forEach(pattern => {
  if (pattern.includes('*')) {
    // –î–ª—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Å wildcard
    const files = fs.readdirSync('.').filter(file => 
      file.includes('service-account-key') && file.endsWith('.json')
    );
    files.forEach(file => {
      console.log(`‚ùå –ù–ê–ô–î–ï–ù –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–´–ô –§–ê–ô–õ: ${file}`);
      hasIssues = true;
    });
  } else {
    // –î–ª—è —Ç–æ—á–Ω—ã—Ö –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
    if (fs.existsSync(pattern)) {
      console.log(`‚ùå –ù–ê–ô–î–ï–ù –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–´–ô –§–ê–ô–õ: ${pattern}`);
      hasIssues = true;
    } else {
      console.log(`‚úÖ ${pattern} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore...');

if (fs.existsSync('.gitignore')) {
  const gitignoreContent = fs.readFileSync('.gitignore', 'utf8');
  
  const requiredPatterns = [
    '.env',
    'google-service-account-key.json',
    '*-service-account-key.json'
  ];
  
  requiredPatterns.forEach(pattern => {
    if (gitignoreContent.includes(pattern)) {
      console.log(`‚úÖ ${pattern} –∑–∞—â–∏—â–µ–Ω –≤ .gitignore`);
    } else {
      console.log(`‚ùå ${pattern} –ù–ï –∑–∞—â–∏—â–µ–Ω –≤ .gitignore`);
      hasIssues = true;
    }
  });
} else {
  console.log('‚ùå –§–∞–π–ª .gitignore –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  hasIssues = true;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json...');

if (fs.existsSync('package.json')) {
  const packageContent = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  
  if (packageContent.dependencies && packageContent.dependencies.googleapis) {
    console.log('‚úÖ Google Sheets API –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  } else {
    console.log('‚ùå Google Sheets API –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    hasIssues = true;
  }
  
  if (packageContent.scripts && packageContent.scripts['test-sheets']) {
    console.log('‚úÖ –°–∫—Ä–∏–ø—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  } else {
    console.log('‚ùå –°–∫—Ä–∏–ø—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    hasIssues = true;
  }
} else {
  console.log('‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  hasIssues = true;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤...');

const requiredFiles = [
  'src/services/googleSheets.js',
  'src/routes/sync.js',
  'env.example',
  'render.env.example',
  'DEPLOYMENT.md',
  'GOOGLE_SHEETS_SETUP.md'
];

requiredFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file} –Ω–∞–π–¥–µ–Ω`);
  } else {
    console.log(`‚ùå ${file} –ù–ï –Ω–∞–π–¥–µ–Ω`);
    hasIssues = true;
  }
});

// –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
console.log('\n' + '='.repeat(50));

if (hasIssues) {
  console.log('üö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò!');
  console.log('‚ùå –ù–ï –ó–ê–ì–†–£–ñ–ê–ô–¢–ï –ù–ê GITHUB –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è!');
  console.log('\nüîß –ß—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:');
  console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .env —Ñ–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore');
  console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ google-service-account-key.json –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∑–∞—â–∏—â–µ–Ω—ã');
} else {
  console.log('‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
  console.log('üöÄ –ú–æ–∂–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–∞ GitHub!');
  console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub');
  console.log('2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–¥ (git add, commit, push)');
  console.log('3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Render —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

console.log('\n' + '='.repeat(50));

// –í—ã—Ö–æ–¥ —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
if (hasIssues) {
  process.exit(1);
}

